/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaceGUI;

import SourceCode.Personnel;
import SourceCode.Supplement;
import SourceCode.UtilityTools;
import SourceCode.Vaccine;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author devil
 */
public class VaccineStorageGUI extends javax.swing.JFrame {

    private List<Supplement> supplements = new ArrayList<>();
    private ArrayList<Vaccine> vaccine = new ArrayList<Vaccine>();
    private DefaultTableModel VaccTable;
    private DefaultTableModel SupTable;
    private Personnel loggedPS;

    /**
     * Creates new form VaccineSupplementGUI
     */
    public VaccineStorageGUI() {
        initComponents();
    }

    public VaccineStorageGUI(Personnel p) {
        loggedPS = p;
        initComponents();
        Supplement sp = new Supplement();
        UtilityTools u = new UtilityTools();
        sp.Read(sp.getDirectory());

        supplements = sp.getSuplist();
        vaccine = u.LoadVaccine();

        VaccTable = (DefaultTableModel) tblVaccine.getModel();
        for (int i = 0; i < vaccine.size(); i++) {
            VaccTable.addRow(new Object[]{
                vaccine.get(i).getVaccName(),
                vaccine.get(i).getQuantity()});

        }

        SupTable = (DefaultTableModel) tblSupplement.getModel();
        for (int i = 0; i < supplements.size(); i++) {
            if (supplements.get(i).getFacility().equals(loggedPS.getFacility())) {
                SupTable.addRow(new Object[]{
                    supplements.get(i).getSupplyID(),
                    supplements.get(i).getVaccineName(),
                    supplements.get(i).getQuantity(),
                    supplements.get(i).getFacility(),
                    supplements.get(i).getStatus(),
                    supplements.get(i).getPersonnelID()});
            }
        }

        for (int i = 0; i < vaccine.size(); i++) { //Load vaccines
            comboVaccine.addItem(vaccine.get(i).getVaccName());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVaccine = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSupplement = new javax.swing.JTable();
        btnConfirm = new javax.swing.JButton();
        lblTitle2 = new javax.swing.JLabel();
        comboVaccine = new javax.swing.JComboBox<>();
        lblVaccine = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnRequest = new javax.swing.JButton();

        setResizable(false);

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitle.setText("Vaccine Storage");

        tblVaccine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine", "Stocks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVaccine);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblSupplement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SupplyID", "VaccineName", "Quantity", "Facility", "Status", "PersonnelID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSupplement);

        btnConfirm.setText("Confirm supplement and add to storage");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        lblTitle2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTitle2.setText("--- Request vaccine supply ---");

        comboVaccine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Vaccine selected." }));

        lblVaccine.setText("Vaccine");

        lblQuantity.setText("Quantity");

        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        btnRequest.setText("Request");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(163, 163, 163)
                        .addComponent(btnConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblVaccine)
                                    .addComponent(lblTitle2)
                                    .addComponent(comboVaccine, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblQuantity)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRequest))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTitle2)
                                .addGap(18, 18, 18)
                                .addComponent(lblVaccine)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboVaccine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblQuantity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnRequest)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBack))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 68, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        String pickedvaccine = comboVaccine.getSelectedItem().toString();
        String requestquantity = txtQuantity.getText();
        UtilityTools u = new UtilityTools();

        if (comboVaccine.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "No Selected Vaccine. ");
        } else if (u.isNumericOnly(requestquantity) == true) {
            
            int input = JOptionPane.showConfirmDialog(null, "Are you sure you want to request a new supply of "+ pickedvaccine + "?\n Quantity: "+requestquantity,
                    "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
            
            if (input == 0) {//All conditions are matched, starts to create new supplment request
                Supplement newsupply = new Supplement("0", pickedvaccine, requestquantity, loggedPS.getFacility(), "Pending", loggedPS.getPersonnelID());
                newsupply.RequestNewSupplement();
                JOptionPane.showMessageDialog(null, "Supplement request sent.");
                this.dispose();
                new VaccineStorageGUI(loggedPS).setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid Quantity. ");
        }
    }//GEN-LAST:event_btnRequestActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        if (tblSupplement.getSelectionModel().isSelectionEmpty()) {

        } else {
        int row = tblSupplement.getSelectedRow();
        ArrayList<String> supplementrecords = new ArrayList<>();
        int dosecount = Integer.parseInt(SupTable.getValueAt(row, 2).toString());
        String vaccinename = SupTable.getValueAt(row, 1).toString();          
            
            
            if (SupTable.getValueAt(row, 4).toString().equals("Arrived")) {
                for (int i = 0; i < supplements.size(); i++) {              
                    if (supplements.get(i).getSupplyID().equals(SupTable.getValueAt(row, 0).toString())) {
                       
                        supplements.get(i).setStatus("Done");

                        new UtilityTools().UpdateVaccineQuantity("+", dosecount, vaccinename); //add teh supply into storage

                        supplementrecords.add(supplements.get(i).toString());
                    } else {
                        supplementrecords.add(supplements.get(i).toString());
                    }
                }
                new Supplement().UpdateSupply(supplementrecords); //update the new list of supplement records
                this.dispose();                                     //refresh page
                new VaccineStorageGUI(loggedPS).setVisible(true);   //refresh page
                JOptionPane.showMessageDialog(null, "Supply has been added into the storage.");
                
            } else {
                JOptionPane.showMessageDialog(null, "Only supplement has arrived can be confirm. ");
            }
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
            this.dispose();
                new PersonnelHomeScreen(loggedPS.getUserID(),
                loggedPS.getUsername(), 
                loggedPS.getPassword(), 
                loggedPS.getEmail(), 
                loggedPS.getFullname(), 
                loggedPS.getAccType()).setVisible(true);       // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VaccineStorageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VaccineStorageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VaccineStorageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VaccineStorageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VaccineStorageGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnRequest;
    private javax.swing.JComboBox<String> comboVaccine;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblVaccine;
    private javax.swing.JTable tblSupplement;
    private javax.swing.JTable tblVaccine;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
